@model MahjongAccount.Models.ViewModels.StatisticsViewModel
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <title>牌局统计 - 麻将记账</title>
    <link href="~/lib/weui.min.css" rel="stylesheet" />
    <link href="~/css/jquery-weui.min.css" rel="stylesheet" />
    <link href="~/css/font-awesome.min.css" rel="stylesheet" />
    <!-- 引入Chart.js用于绘制曲线图 -->
    <script src="~/js/chart.umd.min.js"></script>
    <script src="~/lib/jquery-2.1.4.js"></script>
    <script src="~/js/jquery-weui.js"></script>
    <style>
        .page-title {
            text-align: center;
            padding: 15px 0;
            font-size: 18px;
            font-weight: bold;
            border-bottom: 1px solid #eee;
            background-color: #fff;
            position: relative;
        }

        .game-info {
            padding: 10px 15px;
            font-size: 14px;
            color: #666;
            background-color: #f9f9f9;
            border-bottom: 1px solid #eee;
        }

        .stats-container {
            padding-bottom: 100px;
            background-color: #f5f5f5;
        }

        .section-title {
            padding: 12px 15px;
            font-size: 16px;
            font-weight: 500;
            background-color: #f9f9f9;
            border-bottom: 1px solid #eee;
            display: flex;
            align-items: center;
        }

            .section-title i {
                margin-right: 8px;
                color: #2D8CF0;
            }

        .stats-list {
            background-color: #fff;
            margin-bottom: 15px;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 1px 2px rgba(0,0,0,0.05);
        }

        .stats-item {
            display: flex;
            align-items: center;
            padding: 12px 15px;
            border-bottom: 1px solid #eee;
        }

            .stats-item:last-child {
                border-bottom: none;
            }

        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 12px;
            object-fit: cover;
        }

        .user-info {
            flex: 1;
        }

        .user-name {
            font-size: 16px;
            margin-bottom: 2px;
        }

        .amount {
            font-size: 17px;
            font-weight: bold;
        }

        .win {
            color: #E64340;
        }

        .lose {
            color: #1AAD19;
        }

        .amount-count-item {
            display: flex;
            justify-content: space-between;
            padding: 12px 15px;
            border-bottom: 1px solid #eee;
        }

        .amount-label {
            font-size: 16px;
        }

        .counts {
            display: flex;
            gap: 15px;
        }

        .count-item {
            width: 100px;
            text-align: center;
        }

        .count-value {
            font-size: 17px;
            font-weight: bold;
        }

        .count-label {
            font-size: 12px;
            color: #666;
        }

        .empty-state {
            text-align: center;
            padding: 40px 20px;
            color: #888;
            background-color: #fff;
        }

        .empty-icon {
            font-size: 48px;
            margin-bottom: 15px;
        }

        .btn-area {
            position: fixed;
            bottom: 50px;
            left: 50%;
            transform: translateX(-50%);
            width: 90%;
            display: flex;
            gap: 10px;
            z-index: 10;
        }

        .weui-btn {
            width: 100%;
        }

        .back-btn {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #333;
            font-size: 20px;
        }

        .weui-tabbar {
            position: fixed;
            bottom: 0;
            width: 100%;
        }

        /* 曲线图容器样式 */
        .chart-container {
            padding: 15px;
            background-color: #fff;
            height: 300px;
            position: relative;
        }

        #curveChart {
            width: 100%;
            height: 100%;
        }

        .chart-legend {
            display: flex;
            justify-content: center;
            margin-top: 10px;
            gap: 20px;
            font-size: 12px;
        }

        .legend-item {
            display: flex;
            align-items: center;
        }

        .legend-color {
            width: 10px;
            height: 10px;
            border-radius: 2px;
            margin-right: 5px;
        }
    </style>
</head>
<body>
    <div class="page-title">
        <a href="javascript:history.back()" class="back-btn">
            <i class="fa fa-arrow-left"></i>
        </a>
        牌局统计 #@Model.Game?.Id
    </div>

    @if (Model.Game == null)
    {
        <div class="empty-state">
            <i class="fa fa-exclamation-circle empty-icon"></i>
            <p>无法获取牌局信息</p>
            <a href="@Url.Action("Index", "Home")" class="weui-btn weui-btn_primary" style="margin-top: 20px;">
                返回首页
            </a>
        </div>
    }
    else
    {
        <div class="game-info">
            牌局名称: @Model.Game.Name<br>
            开始时间: @Model.Game.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss")<br>
            结束时间: @Model.Game.EndedAt?.ToString("yyyy-MM-dd HH:mm:ss")
        </div>

        <div class="stats-container">
            <!-- 累计金额曲线图 -->
            <div class="stats-list">
                <div class="section-title">
                    <i class="fa fa-line-chart"></i> 累计金额变化趋势
                </div>
                @if (Model.CurveDatas != null && Model.CurveDatas.Any())
                {
                    <div class="chart-container">
                        <canvas id="curveChart"></canvas>
                    </div>
                }
                else
                {
                    <div class="empty-state">
                        <i class="fa fa-area-chart empty-icon"></i>
                        <p>暂无金额变化数据</p>
                    </div>
                }
            </div>

            <!-- 赢家金额统计 -->
            <div class="stats-list">
                <div class="section-title">
                    <i class="fa fa-trophy"></i> 赢家金额统计
                </div>
                @if (Model.WinTotalAmountStatistics != null && Model.WinTotalAmountStatistics.Any())
                {
                    foreach (var item in Model.WinTotalAmountStatistics.OrderByDescending(x => x.TotalAmount))
                    {
                        <div class="stats-item">
                            <img src="@(!string.IsNullOrEmpty(item.User?.AvatarUrl) ? item.User.AvatarUrl :
                                      $"https://picsum.photos/40/40?random={item.User?.Id}")"
                                 alt="@item.User?.Nickname 的头像" class="user-avatar">
                            <div class="user-info">
                                <div class="user-name">@item.User?.Nickname</div>
                            </div>
                            <div class="amount win">+¥@item.TotalAmount</div>
                        </div>
                    }
                }
                else
                {
                    <div class="empty-state">
                        <i class="fa fa-smile-o empty-icon"></i>
                        <p>暂无赢家统计数据</p>
                    </div>
                }
            </div>

            <!-- 输家金额统计 -->
            <div class="stats-list">
                <div class="section-title">
                    <i class="fa fa-frown-o"></i> 输家金额统计
                </div>
                @if (Model.LoseTotalAmountStatistics != null && Model.LoseTotalAmountStatistics.Any())
                {
                    foreach (var item in Model.LoseTotalAmountStatistics.OrderByDescending(x => x.TotalAmount))
                    {
                        <div class="stats-item">
                            <img src="@(!string.IsNullOrEmpty(item.User?.AvatarUrl) ? item.User.AvatarUrl :
                                      $"https://picsum.photos/40/40?random={item.User?.Id}")"
                                 alt="@item.User?.Nickname 的头像" class="user-avatar">
                            <div class="user-info">
                                <div class="user-name">@item.User?.Nickname</div>
                            </div>
                            <div class="amount lose">-¥@item.TotalAmount</div>
                        </div>
                    }
                }
                else
                {
                    <div class="empty-state">
                        <i class="fa fa-meh-o empty-icon"></i>
                        <p>暂无输家统计数据</p>
                    </div>
                }
            </div>

            <!-- 金额计次统计 -->
            <div class="stats-list">
                <div class="section-title">
                    <i class="fa fa-bar-chart"></i> 金额计次统计
                </div>
                @if (Model.AmountCountStatistics != null && Model.AmountCountStatistics.Any())
                {
                    foreach (var item in Model.AmountCountStatistics.OrderByDescending(x => x.Amount))
                    {
                        <div class="amount-count-item">
                            <div class="amount-label">¥@item.Amount</div>
                            <div class="counts">
                                <div class="count-item">
                                    <div class="count-value win">@item.WinCount</div>
                                    <div class="count-label">赢次</div>
                                </div>
                                <div class="count-item">
                                    <div class="count-value lose">@item.LoseCount</div>
                                    <div class="count-label">输次</div>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="empty-state">
                        <i class="fa fa-pie-chart empty-icon"></i>
                        <p>暂无金额计次统计数据</p>
                    </div>
                }
            </div>
        </div>

        <div class="btn-area" style="margin-bottom: 10px;">
            <a href="javascript:history.back()" class="weui-btn weui-btn_primary">
                返回上一页
            </a>
        </div>

        <div class="weui-tabbar">
            <a href="@Url.Action("Index", "Home", new { autoGoGame = false })" class="weui-tabbar__item">
                <i class="weui-tabbar__icon fa fa-home"></i>
                <p class="weui-tabbar__label">首页</p>
            </a>
            <a href="@Url.Action("History", "Home")" class="weui-tabbar__item">
                <i class="weui-tabbar__icon fa fa-history"></i>
                <p class="weui-tabbar__label">历史</p>
            </a>
            <a href="#" class="weui-tabbar__item weui-bar__item_on">
                <i class="weui-tabbar__icon fa fa-gamepad"></i>
                <p class="weui-tabbar__label">牌局</p>
            </a>
        </div>
    }

    <script>
        // 页面加载完成后初始化图表
        $(document).ready(function() {
            // 准备图表数据
            var curveData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.CurveDatas));

            if (curveData && curveData.length >0){
                // 提取时间标签和金额值
                var labels = curveData.map(item => {
                    var date = new Date(item.CreatedAt);
                    // 格式化时间为 HH:MM
                    return date.getHours().toString().padStart(2, '0') + ':' +
                           date.getMinutes().toString().padStart(2, '0');
                });

                var values = curveData.map(item => item.Amount);

                // 找到最大值和最小值，用于设置Y轴范围
                var maxValue = Math.max(...values);
                var minValue = Math.min(...values);
                var padding = Math.max(Math.abs(maxValue), Math.abs(minValue)) * 0.1;
                var yMin = Math.floor(minValue - padding);
                var yMax = Math.ceil(maxValue + padding);

                // 获取图表上下文
                var ctx = document.getElementById('curveChart').getContext('2d');

                // 创建图表
                var chart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: labels,
                        datasets: [
                            {
                                label: '累计金额',
                                data: values,
                                borderColor: '#3b82f6',
                                backgroundColor: 'rgba(59, 130, 246, 0.1)',
                                borderWidth: 2,
                                pointBackgroundColor: '#3b82f6',
                                pointRadius: 3,
                                pointHoverRadius: 5,
                                tension: 0.3,
                                fill: true
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        interaction: {
                            mode: 'index',
                            intersect: false,
                        },
                        plugins: {
                            tooltip: {
                                backgroundColor: 'rgba(0, 0, 0, 0.7)',
                                padding: 10,
                                titleFont: {
                                    size: 14
                                },
                                bodyFont: {
                                    size: 13
                                },
                                callbacks: {
                                    label: function(context) {
                                        var value = context.raw;
                                        var sign = value >= 0 ? '+' : '';
                                        return `累计金额: ${sign}¥${value}`;
                                    }
                                }
                            },
                            legend: {
                                display: false
                            }
                        },
                        scales: {
                            x: {
                                grid: {
                                    display: false
                                },
                                ticks: {
                                    maxRotation: 0,
                                    autoSkip: true,
                                    maxTicksLimit: 6,
                                    font: {
                                        size: 11
                                    }
                                }
                            },
                            y: {
                                min: yMin,
                                max: yMax,
                                grid: {
                                    color: 'rgba(0, 0, 0, 0.05)'
                                },
                                ticks: {
                                    callback: function(value) {
                                        return '¥' + value;
                                    },
                                    font: {
                                        size: 11
                                    }
                                }
                            }
                        }
                    }
                });
            }
        });
    </script>
</body>
</html>
